function getWeeks(Str) {
    function range(con, tag) {
        let retWeek=[]
        con.slice(0, -1).split(',').forEach(w => {
            let tt = w.split('-')
            let start = parseInt(tt[0])
            let end = parseInt(tt[tt.length - 1])
            if (tag == 1 || tag == 2)    retWeek.push(...Array(end + 1 - start).fill(start).map((x, y) => x + y).filter(f=>{return f%tag==0}))
            else retWeek.push(...Array(end + 1 - start).fill(start).map((x, y) => x + y).filter(v => {return v % 2 != 0    }))
        })
        return retWeek
    }
    Str = Str.replace(/\(|\)|\{|\}|\||第/g, "").replace(/到/g, "-")
    let reWeek = [];
    let week1 = []
    while (Str.search(/周/) != -1) {
        let index = Str.search(/周/)
        if (Str[index + 1] == '单' || Str[index + 1] == '双') {
            week1.push(Str.slice(0, index + 2).replace("周", ""));
            index += 2
        } else {
            week1.push(Str.slice(0, index + 1).replace("周", ""));
            index += 1
        }

        Str = Str.slice(index)
        index = Str.search(/\d/)
        if (index != -1) Str = Str.slice(index)
        else Str = ""

    }
    if (Str.length != 0) week1.push(Str)

    week1.forEach(v => {
        console.log(v)
        if (v.slice(-1) == "双") reWeek.push(...range(v, 2))
        else if (v.slice(-1) == "单") reWeek.push(...range(v, 3))
        else reWeek.push(...range(v+"全", 1))
    });
    return reWeek;
}
function resolveCourseConflicts(result) {
    function pdSection(or, inn) {
        // console.log(or,inn)
        or.sort(function (a, b) {
            return a.section - b.section
        })
        inn.sort(function (a, b) {
            return a.section - b.section
        })
        if (JSON.stringify(or) === JSON.stringify(inn)) {
            return true;
        } else return false;
    }
//将课拆成单节，并去重
    let allResultSet = new Set()
    result.forEach(singleCourse => {
        singleCourse.weeks.forEach(week => {
            singleCourse.sections.forEach(section => {
                let course = {sections: [], weeks: []}
                course.name = singleCourse.name;
                course.teacher = singleCourse.teacher;
                course.position = singleCourse.position;
                course.day = singleCourse.day;
                course.weeks.push(week);
                course.sections.push(section)
                allResultSet.add(JSON.stringify(course))
            })
        })
    })
    let allResult = JSON.parse("[" + Array.from(allResultSet).toString() + "]").sort(function (b, e) {
        return b.day - e.day
    })

    //将冲突的课程进行合并
    let contractResult = [];
    while (allResult.length !== 0) {
        let firstCourse = allResult.shift();
        if (firstCourse == undefined) continue;
        let weekTag = firstCourse.day

        for (let i = 0; allResult[i] !== undefined && weekTag === allResult[i].day; i++) {
            if (firstCourse.weeks[0] === allResult[i].weeks[0]) {
                if (firstCourse.sections[0].section === allResult[i].sections[0].section) {
                    let index = firstCourse.name.split('|').indexOf(allResult[i].name);
                    if (index === -1) {
                        firstCourse.name += "|" + allResult[i].name;
                        firstCourse.teacher += "|" + allResult[i].teacher;
                        firstCourse.position += "|" + allResult[i].position;
                        firstCourse.position = firstCourse.position.replace(/undefined/g,'')
                        allResult.splice(i,1);
                        i--;
                    } else {
                        let teacher = firstCourse.teacher.split("|");
                        let position = firstCourse.position.split("|");
                        teacher[index] = teacher[index] === allResult[i].teacher ? teacher[index] : teacher[index] + "," + allResult[i].teacher;
                        position[index] = position[index] === allResult[i].position ? position[index] : position[index] + "," + allResult[i].position;
                        firstCourse.teacher = teacher.join("|");
                        firstCourse.position = position.join("|");
                        firstCourse.position = firstCourse.position.replace(/undefined/g,'')
                        allResult.splice(i,1);
                        i--;
                    }

                }
            }
        }
        contractResult.push(firstCourse);
    }
    //将每一天内的课程进行合并
    let finallyResult = []
    contractResult = contractResult.sort(function (a,b){return a.day-b.day})
    while (contractResult.length != 0) {
        let firstCourse = contractResult.shift();
        if (firstCourse == undefined) continue;
        let weekTag = firstCourse.day;
        for (let i = 0; contractResult[i] !== undefined && weekTag === contractResult[i].day; i++) {
            if (firstCourse.weeks[0] === contractResult[i].weeks[0] && firstCourse.name === contractResult[i].name && firstCourse.position === contractResult[i].position && firstCourse.teacher === contractResult[i].teacher) {
                if(firstCourse.sections[firstCourse.sections.length-1].section+1===contractResult[i].sections[0].section){
                    firstCourse.sections.push(contractResult[i].sections[0]);
                    contractResult.splice(i,1);
                    i--;
                }
                else break
                // delete (contractResult[i])
            }
        }
        finallyResult.push(firstCourse);
    }
    //将课程的周次进行合并
    contractResult = JSON.parse(JSON.stringify(finallyResult));
    finallyResult.length = 0
    contractResult = contractResult.sort(function (a,b){return a.day-b.day})
    while (contractResult.length != 0) {
        let firstCourse = contractResult.shift();
        if (firstCourse == undefined) continue;
        let weekTag = firstCourse.day;
        for (let i = 0; contractResult[i] !== undefined && weekTag === contractResult[i].day; i++) {
              if (pdSection(firstCourse.sections, contractResult[i].sections) && firstCourse.name === contractResult[i].name && firstCourse.position === contractResult[i].position && firstCourse.teacher === contractResult[i].teacher) {
                firstCourse.weeks.push(contractResult[i].weeks[0]);
                contractResult.splice(i,1);
                i--;
            }
        }
        finallyResult.push(firstCourse);
    }
    console.log(finallyResult)
    return finallyResult;
}
    
    
function scheduleHtmlParser(html) {
    //除函数名外都可编辑
    //传入的参数为上一步函数获取到的html
    //可使用正则匹配
    //可使用解析dom匹配，工具内置了$，跟jquery使用方法一样，直接用就可以了，参考：https://juejin.im/post/5ea131f76fb9a03c8122d6b9
    //以下为示例，您可以完全重写或在此基础上更改

    let $ = cheerio.load(html, {decodeEntities: false});
    let result = []
    let hang = $('#kbtable tr')
    let message="";
    try{
        for (let i = 1 ; i< hang.length-1 ;i++){
            let lie = $('td',hang.eq(i));
            for (let j = 0 ; j< lie.length;j++){
                 let kc = lie.eq(j).children('div[class="kbcontent"]');
                 if (kc.text().length<=6){
                       continue;
                 }
                  let kcco = kc.html().split(/-{3,}/);
                  kcco.forEach(con=>{
                    let re = {weeks: [], sections: []};
                    console.log(con)
                    $ = cheerio.load(con, {decodeEntities: false})
                    console.log($.html())
                    re.day = j + 1;
                    re.name = $('div').length == 0 ? $('body').html().split(/<br>/).filter(f => {
                        return f.trim()
                    })[0] : $('div').eq(0).html().split(/<br>/).filter(f => {
                        return f.trim()
                    })[0];
                    re.teacher = $('font[title="老师"],[title="教师"]').text().replace(/无职称|（高校）/g, "");
                    re.position = $('font[title="教室"]').text()
                    re.weeks = getWeeks($('font[title="周次(节次)"]').text().split("[")[0]);
                  // re.sections = getSection($('font[title="周次(节次)"]').text().match(/(?<=\[).*?(?=\])/g)[0])
                      for (jie = i*2-1; jie <= i*2; jie++){
                          let sec = {};
                          sec.section = jie;
                          re.sections.push(sec);
                     }
                    console.log(re)
                    result.push(re);

                  })

                }    

            }
          if(result.length==0) message ="未获取到课表" 
          else result = resolveCourseConflicts(result)
        }catch(err){
            message = err.message.slice(0,50)
        }
        if(message.length!=0) {
            result.length==0
            result.push({name:"遇到错误，请加qq：357914968进行反馈",teacher:"萧萧",position:message,day:1,weeks:[1],sections:[{section:1},{section:2},{section:3}]})
        }
    let sects = [{
        section:1,
        startTime:'08:00',
        endTime:'08:50'
    },
    {
        section:2,
        startTime:'09:00',
        endTime:'09:50'
    },{
        section:3,
        startTime:'10:10',
        endTime:'11:00'
    },{
        section:4,
        startTime:'11:10',
        endTime:'12:00'
    },{
        section:5,
        startTime:'14:00',
        endTime:'14:50'
    },{
        section:6,
        startTime:'15:00',
        endTime:'15:50'
    },{
        section:7,
        startTime:'16:10',
        endTime:'17:00'
    },{
        section:8,
        startTime:'17:10',
        endTime:'18:00'
    },
    {
        section:9,
        startTime:'19:00',
        endTime:'19:50'
    },{
        section:10,
        startTime:'20:00',
        endTime:'20:50'
    }
    ]

    
    console.log(result)
    return { courseInfos: result,
            sectionTimes: sects
           }
}
